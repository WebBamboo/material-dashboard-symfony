services:
    material_dashboard.config:
        class: Webbamboo\MaterialDashboard\Services\ConfigService
    material_dashboard.generator:
        class: Webbamboo\MaterialDashboard\Generator\Generator
        arguments: ['@maker.file_manager', 'App\']
    Webbamboo\MaterialDashboard\Library\TableHelper:
        autowire: true
    webbamboo.maker.make_crud:
        class:  Webbamboo\MaterialDashboard\Maker\MakeCrud
        arguments: ['@maker.doctrine_helper', '@maker.renderer.form_type_renderer', '@material_dashboard.generator']
        calls:
            - [configureCommand, ['@security.command.user_password_encoder', '@?']]
            - [interact, ['@?', '@?', '@security.command.user_password_encoder']]
        tags:
            - { name: maker.command }
    webbamboo.maker.make_controller:
        class:  Webbamboo\MaterialDashboard\Maker\MakeController
        arguments: ['@material_dashboard.generator']
        tags:
            - { name: maker.command }
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Webbamboo\MaterialDashboard\:
        resource: '../../*'
        exclude: '../../{DependencyInjection,Entity,Migrations,Maker,Tests,Kernel.php}'
